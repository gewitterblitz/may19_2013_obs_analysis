
from matplotlib.colors import LinearSegmentedColormap
from matplotlib.cm import register_cmap

import matplotlib.pyplot as plt
import matplotlib as mpl

# reverse function was taken from https://exceptionshub.com/invert-colormap-in-matplotlib.html
def reverse_colormap(cmap, name = 'my_cmap_r'):
    """
    In: 
    cmap, name 
    Out:
    my_cmap_r

    Explanation:
    t[0] goes from 0 to 1
    row i:   x  y0  y1 -> t[0] t[1] t[2]
                   /
                  /
    row i+1: x  y0  y1 -> t[n] t[1] t[2]

    so the inverse should do the same:
    row i+1: x  y1  y0 -> 1-t[0] t[2] t[1]
                   /
                  /
    row i:   x  y1  y0 -> 1-t[n] t[2] t[1]
    """        
    reverse = []
    k = []   

    for key in cmap._segmentdata:    
        k.append(key)
        channel = cmap._segmentdata[key]
        data = []

        for t in channel:                    
            data.append((1-t[0],t[2],t[1]))            
        reverse.append(sorted(data))    

    LinearL = dict(zip(k,reverse))
    my_cmap_r = mpl.colors.LinearSegmentedColormap(name, LinearL) 
    return my_cmap_r

cdict = {'red': [[0.0, 0.9686274509803922, 0.9686274509803922], [0.058823529411764705, 0.9686274509803922, 0.9686274509803922], [0.11764705882352941, 0.9686274509803922, 0.9686274509803922], [0.17647058823529413, 0.9686274509803922, 0.9686274509803922], [0.23529411764705882, 0.9647058823529412, 0.9647058823529412], [0.29411764705882354, 0.9215686274509803, 0.9215686274509803], [0.35294117647058826, 0.1843137254901961, 0.1843137254901961], [0.4117647058823529, 0.11764705882352941, 0.11764705882352941], [0.47058823529411764, 0.3568627450980392, 0.3568627450980392], [0.5294117647058824, 0.14901960784313725, 0.14901960784313725], [0.5882352941176471, 0.2823529411764706, 0.2823529411764706], [0.6470588235294118, 0.5372549019607843, 0.5372549019607843], [0.7058823529411765, 1.0, 1.0], [0.7647058823529411, 0.9490196078431372, 0.9490196078431372], [0.8235294117647058, 0.7176470588235294, 0.7176470588235294], [0.8823529411764706, 1.0, 1.0], [0.9411764705882353, 1.0, 1.0], [1.0, 0.8196078431372549, 0.8196078431372549]], 'green': [[0.0, 0.9725490196078431, 0.9725490196078431], [0.058823529411764705, 0.9725490196078431, 0.9725490196078431], [0.11764705882352941, 0.9725490196078431, 0.9725490196078431], [0.17647058823529413, 0.9725490196078431, 0.9725490196078431], [0.23529411764705882, 0.4666666666666667, 0.4666666666666667], [0.29411764705882354, 0.7137254901960784, 0.7137254901960784], [0.35294117647058826, 0.27450980392156865, 0.27450980392156865], [0.4117647058823529, 0.5019607843137255, 0.5019607843137255], [0.47058823529411764, 0.8313725490196079, 0.8313725490196079], [0.5294117647058824, 0.4980392156862745, 0.4980392156862745], [0.5882352941176471, 0.7843137254901961, 0.7843137254901961], [0.6470588235294118, 0.8235294117647058, 0.8235294117647058], [0.7058823529411765, 0.9215686274509803, 0.9215686274509803], [0.7647058823529411, 0.22745098039215686, 0.22745098039215686], [0.8235294117647058, 0.1843137254901961, 0.1843137254901961], [0.8823529411764706, 0.49411764705882355, 0.49411764705882355], [0.9411764705882353, 0.7725490196078432, 0.7725490196078432], [1.0, 0.7725490196078432, 0.7725490196078432]], 'blue': [[0.0, 0.9764705882352941, 0.9764705882352941], [0.058823529411764705, 0.9764705882352941, 0.9764705882352941], [0.11764705882352941, 0.9764705882352941, 0.9764705882352941], [0.17647058823529413, 0.9764705882352941, 0.9764705882352941], [0.23529411764705882, 0.6352941176470588, 0.6352941176470588], [0.29411764705882354, 0.9764705882352941, 0.9764705882352941], [0.35294117647058826, 0.7529411764705882, 0.7529411764705882], [0.4117647058823529, 0.8862745098039215, 0.8862745098039215], [0.47058823529411764, 0.8980392156862745, 0.8980392156862745], [0.5294117647058824, 0.21176470588235294, 0.21176470588235294], [0.5882352941176471, 0.3568627450980392, 0.3568627450980392], [0.6470588235294118, 0.1568627450980392, 0.1568627450980392], [0.7058823529411765, 0.3058823529411765, 0.3058823529411765], [0.7647058823529411, 0.18823529411764706, 0.18823529411764706], [0.8235294117647058, 0.058823529411764705, 0.058823529411764705], [0.8823529411764706, 0.35294117647058826, 0.35294117647058826], [0.9411764705882353, 0.7058823529411765, 0.7058823529411765], [1.0, 0.7568627450980392, 0.7568627450980392]]}

cmap = LinearSegmentedColormap('ncarpid', segmentdata=cdict, N=18)
register_cmap(name='ncarpid', cmap=cmap)

cmap_r = reverse_colormap(cmap)
register_cmap(name='ncarpid_r',cmap=cmap_r)
